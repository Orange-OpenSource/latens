apply plugin: 'com.android.application'
apply plugin: 'robolectric'
apply plugin: 'jacoco'

dependencies {
    compile files('libs/achartengine-1.1.0.jar')

    provided "org.projectlombok:lombok:${project.ext.lombokVersion}"

    androidTestCompile "junit:junit:${project.ext.junitVersion}"
    androidTestCompile "org.robolectric:robolectric:${project.ext.robolectricVersion}"
}

android {
    compileSdkVersion Integer.parseInt(appCompileSdkVersion)
    buildToolsVersion appBuildToolsVersion

    defaultConfig {
        minSdkVersion Integer.parseInt(appMinSdkVersion)
        targetSdkVersion Integer.parseInt(appTargetSdkVersion)
        versionCode Integer.parseInt(appVersionCode)
        versionName appVersion

        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
    }
    buildTypes {
        release {
            runProguard false
        }
    }
    sourceSets {
        androidTest {
            setRoot('src/test')
        }
    }
    lintOptions {
        abortOnError false
    }
}

robolectric {
    include '**/*Test.class'
}

jacoco {
    toolVersion = jacocoToolVersion
}

def coverageSourceDirs = [
    'src/main/java'
]

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        html.enabled = true
    }
    classDirectories = fileTree(
            dir: './build/intermediates/classes/debug',
            excludes: ['com/orange/latens/R*.class',
                       'com/orange/latens/BuildConfig.class'
            ])
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('build/jacoco/testDebug.exec')
}

repositories {
    mavenLocal()
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${project.ext.gradleAndroidPluginVersion}"
        classpath "org.robolectric:robolectric-gradle-plugin:${project.ext.gradleRobolectricPluginVersion}"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}
